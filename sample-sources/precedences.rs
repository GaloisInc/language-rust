fn main() {
  a /= - b ? ^= * - c >= - * d [0] ? == box & ! e ? [0] .0 ? [0] .0 ?;
  - a == box b [0] [0] [0] .0 || c [0] ^= d % e = f != g;
  & a *= ! b ^= c * d | e [0];
  a ^ b < * c ? || box d ? %= e [0] = - f < box g % & h &= i ? % & & & j ?;
  a &= - box b ? >> c [0] <= d || & - e ^= f = & g .0 ? [0] <- h .0 .0 += i [0] << j ?;
//  a >> & b && - box c >= d .. e .0 [0] >>= ! f * g >= h && & - i [0] .. j;
  * a > b *= c * d && e ^ - & f ? *= g %= h .0 [0] ? & i -= j ?;
  * a >> b %= c .0 != * - d [0] || e <= f << g .0 | ! h += - & i >= j .0;
  a && ! * box b [0] >> - c || * d ^ * e >= f >= g /= ! h = i [0] ... j;
//  () ... () ... () 
//  a ... box b ? [0] .. * c ? .0 ^ d ... e <<= & f <= g [0] = h && i + j [0] ?;
//  a * b &= c .. & * d ? |= & ! e [0] != & f .0 = g >> ! ! * - h ? ^ i ? %= - j;
//  & a != b [0] % c ... - & & ! - box - d & e [0] += f .. g ? << h /= i <<= j;
//  a [0] >>= b | & ! c / ! & d [0] ? / box e .. - f * * & * - g < h ... i && j;
}

fn foo() { (() ... ()) ... ()  }


